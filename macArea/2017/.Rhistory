q()
options(repos=c(CRAN="https://cran.hafro.is/"))
install.packages(c("aqp", "crayon", "devtools", "dismo", "dplyr", "geosphere", "httr", "jsonlite", "lazyeval", "mime", "openssl", "plyr", "purrr", "raster", "rmarkdown", "rstudioapi", "spatstat", "stringi", "tibble", "tidyr", "withr", "xml2"))
q()
library(maps)    # mapping tool
library(mapdata) # world map data
library(marelac)  # Bathymetry
library(geosphere)  #
library(mapproj)
library(RColorBrewer)
allst <- read.table("Z:/A2016_08/progressMap/AllStations.txt",header=T)
cols <- brewer.pal(9,"Reds")
library(shape)
library(oce)
q()
library(maps)    # mapping tool
library(mapdata) # world map data
library(marelac)  # Bathymetry
library(geosphere)  #
library(mapproj)
library(RColorBrewer)
MAKE.MAP<-function(X1,X2,Y1,Y2,MAIN){
xrange <- range(X1,X2)#7,15
yrange <- range(Y1,Y2)#63,69
plot(xrange, yrange, type="n", main=MAIN,xlab="Longitude", ylab="Latitude",cex.lab=1.2,cex.axis=1.2,cex.main=1.5 )
#contour(Bathymetry$x,Bathymetry$y,Bathymetry$z,col=gray(seq(0.050,1,by=0.05)),add=TRUE,nlevels = 20,lwd=0.5)#femmecol(20)
#contour(Bathymetry$x,Bathymetry$y,Bathymetry$z,col=gray(seq(0.050,1,by=0.05)),add=TRUE,levels = c(-500,-1000),lwd=0.5)#femmecol(20)
m <- map("worldHires", add=TRUE,xlim = xrange, ylim = yrange,col='gray70', boundary=TRUE, interior=FALSE, plot=TRUE, fill=TRUE, wrap=FALSE)
}
par(mar=c(4.5,4.4,1,1))
MAKE.MAP(-32,22,59,77,'')
points(allst$Lon,allst$Lat,cex=0.5,pch=16,col=allst$Vessel)
legend("topleft",c("Vendla","M Ytterstad","Faroese","Iceland","Greenland"),pch=c(16,16,16,16,16),col=c("black","red","green","blue","rosa"),cex=0.9)
allst <- read.table("Z:/A2016_08/progressMap/AllStations.txt",header=T)
cols <- brewer.pal(9,"Reds")
par(mar=c(4.5,4.4,1,1))
MAKE.MAP(-32,22,59,77,'')
points(allst$Lon,allst$Lat,cex=0.5,pch=16,col=allst$Vessel)
legend("topleft",c("Vendla","M Ytterstad","Faroese","Iceland","Greenland"),pch=c(16,16,16,16,16),col=c("black","red","green","blue","rosa"),cex=0.9)
legend("topleft",c("Vendla","M Ytterstad","Faroese","Iceland","Greenland"),pch=c(16,16,16,16,16),col=c("black","red","green","blue","mistyrose"),cex=0.9)
points(allst$Lon,allst$Lat,cex=0.5,pch=16,col=allst$Vessel)
legend("topleft",c("Vendla","M Ytterstad","Faroese","Iceland","Greenland"),pch=c(16,16,16,16,16),col=c("black","red","green","blue","mistyrose"),cex=0.9)
ls()
allst <- read.table("AllStations.txt",header=T)
getwd()
MAKE.MAP<-function(X1,X2,Y1,Y2,MAIN){
xrange <- range(X1,X2)#7,15
yrange <- range(Y1,Y2)#63,69
plot(xrange, yrange, type="n", main=MAIN,xlab="Longitude", ylab="Latitude",cex.lab=1.2,cex.axis=1.2,cex.main=1.5 )
#contour(Bathymetry$x,Bathymetry$y,Bathymetry$z,col=gray(seq(0.050,1,by=0.05)),add=TRUE,nlevels = 20,lwd=0.5)#femmecol(20)
#contour(Bathymetry$x,Bathymetry$y,Bathymetry$z,col=gray(seq(0.050,1,by=0.05)),add=TRUE,levels = c(-500,-1000),lwd=0.5)#femmecol(20)
m <- map("worldHires", add=TRUE,xlim = xrange, ylim = yrange,col='gray70', boundary=TRUE, interior=FALSE, plot=TRUE, fill=TRUE, wrap=FALSE)
}
par(mar=c(4.5,4.4,1,1))
MAKE.MAP(-32,22,59,77,'')
points(allst$Lon,allst$Lat,cex=0.5,pch=16,col=allst$Vessel)
legend("topleft",c("Vendla","M Ytterstad","Faroese","Iceland","Greenland"),pch=c(16,16,16,16,16),col=c("black","red","green","blue","mistyrose"),cex=0.9)
getOption("rstudio.markdonwToHTML")
getOption("rstudio.markdownToHTML")
getOption()
?getOption
options("width")
getOption("width")
options()
length(options())
names(options())
getOption("citation.bibtex.max")
getOption("download.file.method")
getOption("editor")
getOption("help_type")
getOption("keep.source.pkgs")
getOption("printcmd")
getOption("useFancyQuotes")
.libPaths()
update.packages(lib.loc = .libPaths()[1], checkBuilt = TRUE)
update.packages(lib.loc = .libPaths()[1], checkBuilt = TRUE, ask = FALSE
)
library(rJava)
remove.packages("rJava")
q()
getwd()
packageDescription("packrat")
packageDescription("rsconnect")
packageDescription("PKI")
install.packages(c("PKI", "packrat", "rsconnect"),repos="http://cran.hafro.is")
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("revealjs")
search()
unlink('tmp/reveal_test_cache', recursive = TRUE)
getwd()
q()
remove.packages(bionechi)
devtools::install_github("sigurdurthorjonsson/bionechi", build_vignettes = TRUE)
pos <- read.delim("nafn_og_stadur.txt",
sep = "\t", col.names = c("name", "place"))
getwd()
vignette("gisland")
browseVignettes("gisland")
library(gisland)
ls(2)
search()
class(iceland)
class(stratas.sp)
nrow(stratas.sp)
names(stratas.sp)
stratas.sp$names
stratas.sp$ID
stratas.sp$area
stratas.sp$rall.area
all.equal(stratas.sp$area, stratas.sp$rall.area)
diff(stratas.sp$area, stratas.sp$rall.area)
pdiff(stratas.sp$area, stratas.sp$rall.area)
stratas.sp$area - stratas.sp$rall.area
length(stratas.sp$long)
library(geo)
geoplot(stratas.sp$lat, stratas.sp$long)
plot(stratas.sp)
q()
getwd()
q()
getwd()
library(ggmap)
?ggmap
q()
install.packages("sf")
library(reticulate)
devtools::install_github("rstudio/reticulate")
install.packages("reticulate")
?reticulate::py_run
browseVignettes("reticulate")
q()
library(RQGIS)
install.packages("RQGIS")
library(citr)
install.packages("citr")
packageDescription("bibtex")
packageDescription("miniUI")
packageDescription("RefManageR")
packageDescription("citr")
browseVignettes("citr")
browseVignettes("bibtex")
browseVignettes("RefManageR")
install.packages("rticles")
packageDescription("rticles")
library(rticles)
ls(2)
?asa_article
?acm_article
?ctex
?ctex_template
?sim_article
?elsevier_article
install.packages("bookdown")
source('~/Data/OI-daily-v2/macArea/R/02_ncoDataAggregation.R')
source('~/Data/OI-daily-v2/macArea/R/02_ncoDataAggregation.R')
